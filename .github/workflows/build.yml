name: 'Build docker - simple'
on:
  workflow_call: 
    inputs:
      LOCAL_IMAGE_NAME:
        type: string
        required: true
        description: |
          Yarn workspace name without leading @ symbol
          as it is an invalid docker tag character
      APP_NAME:
        type: string
        required: true
        description: |
          Yarn workspace name without leading @ symbol
          as it is an invalid docker tag character
jobs:
  build:
    runs-on: 'base'
    steps:
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.11
      - name: Setup cache - node_modules
        id: yarn-cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: yarn-${{ hashFiles('yarn.lock') }}-${{ hashFiles('package.json') }}
          restore-keys: yarn-
      - name: Setup cache - turbo
        uses: actions/cache@v3
        with:
          path: .turbo
          key: turbo-cache-build-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            turbo-cache-build-${{ github.ref_name }}-
            turbo-cache-build-main-
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        shell: bash
        run: yarn --ignore-scripts --prefer-offline --frozen-lockfile
      - name: Build
        shell: bash
        run: yarn build --filter=@${{ inputs.APP_NAME }} --cache-dir=.turbo
      - name: Determine dist folder
        shell: bash
        id: get-dist
        run: echo ::set-output name=dist::$(echo $(yarn workspace @${{ inputs.APP_NAME }} -s --no-progress --non-interactive --json exec pwd)/dist/)
      - name: Build image
        shell: bash
        run: |
          docker build ${{ steps.get-dist.outputs.dist }} \
            -f Dockerfile.simple \
            -t $LOCAL_IMAGE_NAME \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --cache-from $LOCAL_IMAGE_NAME